// <auto-generated />
using System;
using Chat.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chat.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190504201544_Crear Base")]
    partial class CrearBase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chat.Data.Entities.Mensaje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("enviado");

                    b.Property<string>("mensaje")
                        .HasMaxLength(240);

                    b.Property<int?>("usuarioEmisorId");

                    b.HasKey("id");

                    b.HasIndex("usuarioEmisorId");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("Chat.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorreoElectronico");

                    b.Property<string>("NombreUsuario");

                    b.Property<DateTime>("UltimoAcceso");

                    b.Property<string>("UrlAvatar");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Chat.Data.Entities.Mensaje", b =>
                {
                    b.HasOne("Chat.Data.Entities.Usuario", "usuarioEmisor")
                        .WithMany()
                        .HasForeignKey("usuarioEmisorId");
                });
#pragma warning restore 612, 618
        }
    }
}
