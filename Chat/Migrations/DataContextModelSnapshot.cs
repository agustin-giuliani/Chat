// <auto-generated />
using System;
using Chat.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chat.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Chat.Data.Entities.Mensaje", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("enviado");

                    b.Property<int>("idGrupo");

                    b.Property<string>("mensaje")
                        .HasMaxLength(240);

                    b.Property<int?>("usuarioEmisorid");

                    b.Property<int?>("usuarioReceptorid");

                    b.HasKey("id");

                    b.HasIndex("usuarioEmisorid");

                    b.HasIndex("usuarioReceptorid");

                    b.ToTable("Mensajes");
                });

            modelBuilder.Entity("Chat.Data.Entities.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("contraseña");

                    b.Property<DateTime>("fechaAlta");

                    b.Property<string>("nombreUsuario");

                    b.Property<string>("preguntaSecreta");

                    b.Property<string>("respuestaPregSecreta");

                    b.Property<DateTime>("ultimoAcceso");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Chat.Data.Entities.Mensaje", b =>
                {
                    b.HasOne("Chat.Data.Entities.Usuario", "usuarioEmisor")
                        .WithMany()
                        .HasForeignKey("usuarioEmisorid");

                    b.HasOne("Chat.Data.Entities.Usuario", "usuarioReceptor")
                        .WithMany()
                        .HasForeignKey("usuarioReceptorid");
                });
#pragma warning restore 612, 618
        }
    }
}
